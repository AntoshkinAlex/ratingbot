from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import const
import mongodb as backend
import texttable as table

bot = const.bot

########################################################################################################################


def print_admin_user_information(chatId, user):
    try:
        user_id = user
        userInformation = backend.get_user(user_id)
        userAchievements = '\n'
        if 'custom_achievements' in userInformation:
            userAchievements = ''
            for achievement in userInformation['custom_achievements']:
                userAchievements += str(achievement) + '\n'
        key = InlineKeyboardMarkup()
        but_1 = InlineKeyboardButton(text="–î–∏–≤–∏–∑–∏–æ–Ω", callback_data="change_div " + user_id)
        but_2 = InlineKeyboardButton(text="–£—á–∞—Å—Ç–Ω–∏–∫",
                                     callback_data="change_participant " + user_id)
        but_3 = InlineKeyboardButton(text="–ò–º—è", callback_data="change_name " + user_id)
        but_4 = InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="show_achievements " + user_id)
        but_5 = InlineKeyboardButton(text="–•—ç–Ω–¥–ª", callback_data="change_handle " + user_id)
        key.add(but_1, but_2, but_3, but_4, but_5)
        is_participant = "–î–∞"
        if not userInformation['is_participant']:
            is_participant = "–ù–µ—Ç"
        mes = "<b>" + userInformation['active_name'] + ":</b>\n\n" + "–î–∏–≤–∏–∑–∏–æ–Ω:\n" + str(userInformation['division']) + "\n\n"
        mes += "Handle: " + userInformation['handle'] + "\n"
        if 'achievements' in userInformation:
            mes += "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n" + userInformation['achievements'] + "\n" + userAchievements + "\n"
        mes += "–Ø–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–æ–Ω—Ç–µ—Å—Ç–æ–≤: " + is_participant + "\n"
        bot.send_message(chatId, mes, parse_mode="html", reply_markup=key)
    except Exception as err:
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–¥–º–∏–Ω—É', err)
        bot.send_message(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


########################################################################################################################


def change_participant(message, chat_id):
    try:
        user_id = message[message.find('change_participant ') + 19: len(message)]
        user = backend.get_user(user_id)
        newparticipant = True
        if user['is_participant']:
            newparticipant = False
        backend.update_user(user_id, {'is_participant': newparticipant})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–Ω—Ç–µ—Å—Ç–∞', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–Ω—Ç–µ—Å—Ç–∞')


########################################################################################################################


def show_achievements(message, chat_id):
    try:
        user_id = message[message.find('show_achievements ') + 18: len(message)]
        user = backend.get_user(user_id)
        custom_achievements = []
        if 'custom_achievements' in user:
            custom_achievements = user['custom_achievements']

        key = InlineKeyboardMarkup()
        for (index, achievement) in enumerate(custom_achievements):
            button = InlineKeyboardButton(text=achievement,
                                          callback_data='achievement: ' + str(index) + ' ' + str(user_id))
            key.add(button)
        button = InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ', callback_data='+achievement ' + str(user_id))
        key.add(button)
        bot.send_message(chat_id,
                         '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–û–ë–ê–í–ò–¢–¨, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ',
                         reply_markup=key)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')


def edit_achievement(message, chat_id):
    try:
        number = int(message[message.find('achievement: ') + 13: message.rfind(' ')])
        user_id = str(message[message.rfind(' ') + 1: len(message)])
        user = backend.get_user(user_id)
        custom_achievements = []
        if 'custom_achievements' in user:
            custom_achievements = user['custom_achievements']
        del custom_achievements[number]
        backend.update_user(user_id, {'custom_achievements': custom_achievements})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')


def add_achievement(message, chat_id):
    try:
        user_id = message[message.find(' ') + 1: len(message)]
        backend.insert_session(chat_id, 'achievement', {'user_id': user_id})
        bot.send_message(chat_id, '–ù–∞–ø–∏—à–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É')


def new_achievement(message, chat_id, args):
    try:
        backend.erase_session(chat_id)
        user_id = args['user_id']
        user = backend.get_user(user_id)
        custom_achievements = []
        if 'custom_achievements' in user:
            custom_achievements = user['custom_achievements']
        custom_achievements.append(message)
        backend.update_user(user_id, {'custom_achievements': custom_achievements})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫—É')


########################################################################################################################


def show_contest(contestId, chat_id, admin):
    try:
        contest = backend.get_contest_information(contestId)
        if not 'activity' in contest:
            activity = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
            backend.update_contest(contest['id'], {'activity': activity})
        else:
            activity = contest['activity']
        contestInformation = "<b>" + contest['name'] + ":</b>\n\n"
        for num in range(3):
            contestInformation += 'Div. ' + str((num + 1)) + ':\n'
            for (index, color) in enumerate(const.activity):
                contestInformation += str(color[0]) + ': ' + str(activity[num][index]) + '\n'
            contestInformation += '\n'

        rating = contest['allActivity']
        if admin:
            key = InlineKeyboardMarkup()
            but_1 = InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                                         callback_data="choose_div " + str(contestId) + ' ' + str(chat_id))
            key.add(but_1)
            bot.send_message(chat_id, contestInformation + '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –∫–æ–Ω—Ç–µ—Å—Ç:\n\n<pre>' + rating + '</pre>', parse_mode="html", reply_markup=key)
        else:
            bot.send_message(chat_id, contestInformation + '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –∫–æ–Ω—Ç–µ—Å—Ç:\n\n<pre>' + rating + '</pre>',
                             parse_mode="html")
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ—Å—Ç–µ', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ—Å—Ç–µ')


########################################################################################################################


def choose_div(contestId, chat_id):
    try:
        key = InlineKeyboardMarkup()
        but_1 = InlineKeyboardButton(text="Div 1",
                                     callback_data="div_1 " + contestId + ' ' + chat_id)
        but_2 = InlineKeyboardButton(text="Div 2",
                                     callback_data="div_2 " + contestId + ' ' + chat_id)
        but_3 = InlineKeyboardButton(text="Div 3",
                                     callback_data="div_3 " + contestId + ' ' + chat_id)
        key.add(but_1, but_2, but_3)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–≤–∏–∑–∏–æ–Ω", reply_markup=key)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –¥–∏–≤–∏–∑–∏–æ–Ω', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –¥–∏–≤–∏–∑–∏–æ–Ω')


def edit_activity(contestId, chat_id, div):
    try:
        bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ —Ä–µ—à–∏—Ç—å –¥–ª—è –¥–∏–≤–∏–∑–∏–æ–Ω–∞ " + str(div) + ", –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ üü† üü° üü¢ üü£")
        backend.insert_session(chat_id, 'change_contest_activity', {'contest_id': contestId, 'div': div})
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')


def change_activity(mes, chat_id, args):
    try:
        activity = [0, 0, 0, 0, 0]
        mes += ' '
        pos = 1
        while mes.find(' ') != -1:
            s = mes[0 : mes.find(' ')]
            activity[pos] = int(s)
            pos += 1
            mes = mes[mes.find(' ') + 1: len(mes)]
        new_activity = backend.get_contest_information(args['contest_id'])['activity']
        new_activity[int(args['div']) - 1] = activity
        backend.update_contest(args['contest_id'], {'activity': new_activity})
        show_contest(args['contest_id'], chat_id, True)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ–Ω—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')


########################################################################################################################


def change_name(message, chat_id):
    try:
        user_id = message[message.find('change_name ') + 12: len(message)]
        backend.insert_session(chat_id, 'name', {'user_id': user_id})
        bot.send_message(chat_id, '–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é')
    except Exception as err:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏', err)
        bot.send_message(chat_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏')


def edit_name(message, chat_id, args):
    try:
        user_id = args['user_id']
        name = message
        backend.update_user(user_id, {'name': name, 'active_name': name})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏', err)
        bot.send_message(chat_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏')


########################################################################################################################


def change_div(message, chat_id):
    try:
        user_id = message[message.find('change_div ') + 11: len(message)]
        user = backend.get_user(user_id)
        newdiv = user['division'] + 1
        if newdiv == 4:
            newdiv = 1
        backend.update_user(user_id, {'division': newdiv})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–º–µ–Ω–∏—Ç—å –¥–∏–≤–∏–∑–∏–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', err)
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–º–µ–Ω–∏—Ç—å –¥–∏–≤–∏–∑–∏–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')


########################################################################################################################


def change_handle(message, chat_id):
    try:
        user_id = message[message.find('change_handle ') + 14: len(message)]
        backend.insert_session(chat_id, 'handle', {'user_id': user_id})
        bot.send_message(chat_id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π handle –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    except Exception as err:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ handle', err)
        bot.send_message(chat_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ handle')


def edit_handle(message, chat_id, args):
    try:
        user_id = args['user_id']
        handle = message
        backend.update_user(user_id, {'handle': handle})
        print_admin_user_information(chat_id, user_id)
    except Exception as err:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏', err)
        bot.send_message(chat_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏')


########################################################################################################################